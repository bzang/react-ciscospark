import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import ActivityItemBase from '@ciscospark/react-component-activity-item-base';
import ActivityText from '@ciscospark/react-component-activity-text';
import FileShareDisplay from '@ciscospark/react-component-file-share-display';

import styles from './styles.css';

const propTypes = {
  content: PropTypes.string,
  displayName: PropTypes.string,
  files: PropTypes.array.isRequired,
  isPending: PropTypes.bool,
  onDownloadClick: PropTypes.func.isRequired,
  share: PropTypes.object.isRequired
};

const defaultProps = {
  content: '',
  displayName: '',
  isPending: false
};

export function ActivityShareFiles(props) {
  const {
    content,
    displayName,
    files,
    isPending,
    onDownloadClick,
    share
  } = props;

  const items = files.map((file) => {
    let objectUrl;
    let isFetching = true;
    if (file.image) {
      if (isPending) {
        objectUrl = file.thumbnail;
        isFetching = false;
      }
      else {
        const thumbnail = file.mimeType === 'image/gif' ? share.getIn(['files', file.url]) : share.getIn(['files', file.image.url]);
        if (thumbnail) {
          isFetching = thumbnail.get('isFetching');
          objectUrl = thumbnail.get('objectUrl');
        }
      }
    }
    return (
      <FileShareDisplay
        file={file}
        isFetching={isFetching}
        isPending={isPending}
        key={file.url}
        objectUrl={objectUrl}
        onDownloadClick={onDownloadClick}
      />
    );
  });

  let textItem;
  if (content || displayName) {
    textItem = <ActivityText content={content} displayName={displayName} />;
  }

  return (
    <ActivityItemBase {...props}>
      <div className={classNames('ciscospark-activity-share-list', styles.shareList)}>
        {items}
        {textItem}
      </div>
    </ActivityItemBase>
  );
}

ActivityShareFiles.propTypes = propTypes;
ActivityShareFiles.defaultProps = defaultProps;

export default ActivityShareFiles;
