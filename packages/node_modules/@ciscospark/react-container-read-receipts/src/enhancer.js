import {compose, lifecycle, setPropTypes} from 'recompose';
import PropTypes from 'prop-types';
import {connect} from 'react-redux';
import {bindActionCreators} from 'redux';

import {fetchAvatarsForUsers} from '@ciscospark/redux-module-avatar';

import getReadReceiptsProps from './selectors';

export default compose(
  setPropTypes({
    fetchAvatarsForUsers: PropTypes.func.isRequired,
    sparkInstance: PropTypes.object.isRequired
  }),
  connect(
    getReadReceiptsProps,
    (dispatch) => bindActionCreators({
      fetchAvatarsForUsers
    }, dispatch)
  ),
  lifecycle({
    componentWillReceiveProps(nextProps) {
      const {
        visibleUsers,
        sparkInstance
      } = this.props;
      const nextUsers = nextProps.visibleUsers;
      if (visibleUsers !== nextUsers) {
        this.props.fetchAvatarsForUsers(nextUsers.map((user) => user.userId), sparkInstance);
      }
    }
  })
);
