import React from 'react';
import PropTypes from 'prop-types';
import classNames from 'classnames';

import TypingAvatar from '@ciscospark/react-component-typing-avatar';
import Badge from '@ciscospark/react-component-badge';

import enhancer from './enhancer';
import styles from './styles.css';

const propTypes = {
  // From selector
  hiddenUsers: PropTypes.array,
  visibleUsers: PropTypes.array
};

const defaultProps = {
  hiddenUsers: [],
  visibleUsers: []
};

function ReadReceipts({hiddenUsers, visibleUsers}) {
  const readReceipts = visibleUsers.map((user) =>
    (<TypingAvatar
      avatarId={user.userId}
      isTyping={user.isTyping}
      key={user.userId}
      name={user.displayName}
    />));
  if (hiddenUsers.length) {
    const badgeTooltip = hiddenUsers
      .slice(0, 10)
      .map((u) => <p key={u.userId}>{u.displayName}</p>);

    if (hiddenUsers.length > 10) {
      const remainingHidden = `+${hiddenUsers.length - 10}`;
      badgeTooltip.push(<p>{remainingHidden}</p>);
    }
    readReceipts.push(
      <Badge
        key={`${hiddenUsers.length}-remaining`}
        tooltip={badgeTooltip}
      >
        {`+${hiddenUsers.length}`}
      </Badge>
    );
  }

  return (
    <div className={classNames('ciscospark-read-receipts', styles.readReceipts)}>
      {readReceipts}
    </div>
  );
}


ReadReceipts.propTypes = propTypes;
ReadReceipts.defaultProps = defaultProps;

export default enhancer(ReadReceipts);
export {
  ReadReceipts,
  enhancer
};
