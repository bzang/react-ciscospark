import {fromJS} from 'immutable';
import {combineReducers} from 'redux';

import avatar from '@ciscospark/redux-module-avatar';
import spaces from '@ciscospark/redux-module-spaces';
import users from '@ciscospark/redux-module-users';
import search from '@ciscospark/redux-module-search';
import media from '@ciscospark/redux-module-media';
import spark from '@ciscospark/react-redux-spark';

import {
  SET_PARTICIPANT_EDITING,
  UPDATE_WIDGET_STATE,
  VIEW_MAIN
} from './actions';

export const initialState = fromJS({
  currentView: VIEW_MAIN,
  searchTerm: '',
  editingParticipant: false
});

export function reducer(state = initialState, action) {
  switch (action.type) {
    case SET_PARTICIPANT_EDITING:
      return state.set('editingParticipant', action.payload.participant);

    case UPDATE_WIDGET_STATE:
      return state.merge(fromJS(action.payload.state));

    default:
      return state;
  }
}

export const reducers = {
  avatar,
  spaces,
  users,
  spark,
  search,
  media,
  widgetRoster: reducer
};

export default combineReducers(reducers);
