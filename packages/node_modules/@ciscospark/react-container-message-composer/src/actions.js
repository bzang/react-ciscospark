const UPDATE_TEXTAREA_FOCUS = 'message-composer/UPDATE_TEXTAREA_FOCUS';
const SET_TYPING_STATUS = 'message-composer/SET_TYPING_STATUS';

export function blurTextArea() {
  return {
    type: UPDATE_TEXTAREA_FOCUS,
    payload: {
      hasTextAreaFocus: false
    }
  };
}

export function focusTextArea() {
  return {
    type: UPDATE_TEXTAREA_FOCUS,
    payload: {
      hasTextAreaFocus: true
    }
  };
}

function setTypingStatus(isTyping) {
  return {
    type: SET_TYPING_STATUS,
    payload: {
      isTyping
    }
  };
}


/**
 * Sets the typing status of the current user
 *
 * @param {object} sparkInstance
 * @param {object} options
 * @param {object} options.conversation from sdk from space store
 * @param {boolean} options.isTyping
 * @returns {function}
 */
export function updateUserTyping(sparkInstance, {conversation, isTyping}) {
  return (dispatch) =>
    sparkInstance.internal.conversation.updateTypingStatus(conversation, {typing: isTyping})
      .then(() => dispatch(setTypingStatus(isTyping)))
      .catch((error) => {
      // Offline
        if (error.name === 'NetworkOrCORSError') {
          return Promise.resolve();
        }
        throw error;
      });
}
