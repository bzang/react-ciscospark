import {createSelector} from 'reselect';
import {FEATURE_MENTIONS} from '@ciscospark/redux-module-features';

const getSparkInstance = (state) => state.spark.get('spark');
const getSpaces = (state) => state.spaces.get('byId');
const getUsers = (state) => state.users.get('byId');
const getWidget = (state) => state.messageComposer;
const getAvatars = (state) => state.avatars.get('byId');
const getFeatures = (state) => state.features.get('items');
const getSpaceId = (state, ownProps) => ownProps.spaceId;


const getSpace = createSelector(
  [getSpaces, getSpaceId],
  (spaces, spaceId) => spaces.get(spaceId)
);

const getParticipants = createSelector(
  [getSpace, getUsers, getAvatars],
  (space, users, avatars) => {
    if (space && space.participants) {
      // Merge user details with space specific user details
      return space.participants
        .map((user, id) => ({
          display: user.displayName,
          avatarUrl: avatars.get(id),
          id
        }));
    }
    return {};
  }
);


export default createSelector(
  [
    getParticipants,
    getSpace,
    getSparkInstance,
    getFeatures,
    getWidget
  ],
  (participants, space, sparkInstance, features, messageComposer) => ({
    showMentions: features.get(FEATURE_MENTIONS),
    sparkInstance,
    participants,
    space,
    messageComposer
  })
);
