import {compose, setDisplayName} from 'recompose';
import React, {Component} from 'react';
import {connect} from 'react-redux';
import PropTypes from 'prop-types';
import {bindActionCreators} from 'redux';
import Dropzone from 'react-dropzone';

import {addFiles} from '@ciscospark/redux-module-messaging';
import {constructFiles} from '@ciscospark/react-component-utils';

import styles from './styles.css';

const propTypes = {
  activity: PropTypes.object.isRequired,
  space: PropTypes.object.isRequired,
  sparkInstance: PropTypes.object.isRequired,
  addFiles: PropTypes.func.isRequired,
  children: PropTypes.node.isRequired
};

class FileDrop extends Component {
  handleFileDrop(acceptedFiles) {
    const {
      activity,
      space,
      sparkInstance
    } = this.props;
    const files = constructFiles(acceptedFiles);
    if (files.length) {
      this.props.addFiles(sparkInstance, {conversation: space.conversation, message: activity, files});
    }
  }

  render() {
    return (
      <Dropzone
        activeClassName={styles.activeDropzone}
        className={styles.dropzone}
        disableClick
        disablePreview
        onDrop={this.handleFileDrop}
      >
        {this.props.children}
      </Dropzone>
    );
  }
}

FileDrop.propTypes = propTypes;


export default compose(
  setDisplayName('FileDrop'),
  connect(
    null,
    (dispatch) => bindActionCreators({
      addFiles
    }, dispatch)
  )
)(FileDrop);
