import {compose, lifecycle} from 'recompose';

/**
 * Attempts to fetch and establish a conversation
 *
 * @param {object} props
 */
function establishSpace(props) {
  const {
    toPersonEmail,
    toPersonId,
    spaceId,
    sparkInstance,
    sparkState,
    space
  } = props;

  const {
    registered
  } = sparkState;

  if (registered && (!space || !space.isFetching)) {
    if (toPersonId || toPersonEmail) {
      props.createSpace(sparkInstance, [toPersonId || toPersonEmail]);
    }
    else if (spaceId) {
      props.getSpace(sparkInstance, spaceId);
    }
  }
}

export default compose(
  lifecycle({
    componentDidMount() {
      establishSpace(this.props);
    },
    componentWillReceiveProps(nextProps) {
      establishSpace(nextProps);
    }
  })
);
